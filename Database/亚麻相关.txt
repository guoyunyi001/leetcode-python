/*1082 sales analysis i
description http://206.81.6.248:12306/leetcode/sales-analysis-i/description
*/
select product_id
from
(select product_id, sum(p.unit_price) as price
from sales s
left join product p on s.product_id=p.product_id
group by product_id) p
having p.price = max(price)


/*1082 sales analysis ii
description http://206.81.6.248:12306/leetcode/sales-analysis-ii/description
*/
select distinct buyer_id
from sales s
inner join (select * from product where name='S8') p1 on s.product_id=p1.product_id
left join (select * from product where name='iPhone') p2 on s.product_id=p2.product_id
where p2.name is null

/*1084 sales analysis iii
description http://206.81.6.248:12306/leetcode/sales-analysis-iii/description 
*/
select 
      s.product_id,
      p.name
 from sales s
 left join product p on s.product_id = p.id
where s.sales_date<'2019-01-01' 
  and s.sales_Date>'2019-03-31'
  and p.id not in (select s.product_id 
                     from sales 
					where sales_date<'2019-01-01' 
					   or sales_Date>'2019-03-31')

/*1070 product sales analysis iii
description http://206.81.6.248:12306/leetcode/product-sales-analysis-iii/description
*/
select s.product_id, s.year, sum(s.quantity) , s.price
from sales s
left join product p on s.product_id=p.id
inner join (select product_id,min(year) from sales group by product_id) s2 on s2.product_id=s.id and s2.year=s.year
group by s.product_id, s.year, s.price

/*1069 product sales analysis ii
description http://206.81.6.248:12306/leetcode/product-sales-analysis-ii/description
*/
select prduct_id, sum(quantity) as total_quantity
from sales
group by product_id

/*1050 actors and directors who cooperate at least three times
description http://206.81.6.248:12306/leetcode/actors-and-directors-who-cooperated-at-least-three-times/description
*/
select distinct actor_id, director_id
from actordirector
group by actor_id, director_id
having count(*)>=3

/*1050 customers who bought all the products
description http://206.81.6.248:12306/leetcode/customers-who-bought-all-products/description
solution https://code.dennyzhang.com/ search question name
*/
select customer_id
from customer c
group by customer_id
having count(distinct *) = (select count(*) from product)

/*1050 delete duplicate emails
description http://206.81.6.248:12306/leetcode/delete-duplicate-emails/description
*/
select e1.email
from email e1, email e2
where e1.id>e2.id
and e1.email=e2.email

/*185 department top three salary
description http://206.81.6.248:12306/leetcode/department-top-three-salaries/description
*/
select d.name department, e1.name, e1.salary
from employee e1
left join department d on d.id=e1.departmentid
where (select count(distinct salary) from employee where salary >= e1.salary and departmentid = e1.department)<=3

select d.name department, e1.name, e1.salary
from employee e1
left join department d on d.id=e1.departmentid
left join employee e2 on e1.departmentid=e2.departmentid and e1.salary<=e2.salary
group by e1.departmentid, e1.name, e1.salary
having count(distinct e2.salary) <=3

/*184 department hightest salary
description http://206.81.6.248:12306/leetcode/department-highest-salary/description
*/
select d.name, e1.name, e1.salary 
from employee e1
left join department d on e1.departmentid=d.id
where e1.salary=(select max(salary) from employee where departmentid=e1.department group by departmentid)

/*183 customers who never order
description http://206.81.6.248:12306/leetcode/customers-who-never-order/description
*/
select name customers
from customer c
where c.id not in (select customer id from orders)

/*181 employees earning more than their managers
description http://206.81.6.248:12306/leetcode/employees-earning-more-than-their-managers/description
*/
select e1.name employee
from employee e1
left join employee e2 on e1.managerid=e2.id
where e1.salary>e2.salary

/*178 rank scores
description http://206.81.6.248:12306/leetcode/rank-scores/description
*/
select s1.score, count(s2.score) as rank
from scores s1
left join (select distinct scores from scores) s2 on s2.score>=s1.score
group by s1.score


select s.score, (select count(distinct scores) from scores where scores>=s.score) rank
from scores s
order by s.score desc

/*177 nth highest salary
description http://206.81.6.248:12306/leetcode/nth-highest-salary/description
*/

select max(salary)
from employee 
where salary <(
select salary 
from employee 
order by salary desc
)
limit n-1 offset 1

/*176 second highest salary
description http://206.81.6.248:12306/leetcode/second-highest-salary/description
*/
select salary secondhightsalary
from employee where salary<(select max(salary) from employee) 
limit 1

/*175 conbine two tables
description http://206.81.6.248:12306/leetcode/combine-two-tables/description
*/
select firstname, lastname, city, state
from person
left join address on person.personid=address.personid

/*579 conbine two tables
description http://206.81.6.248:12306/leetcode/find-cumulative-salary-of-an-employee/description
*/
select e1.id, e1.month, sum(e2.salary) month_3
from employee e1, employee e2,
(select id, max(month) mm from employee group by id) e3
where 
e2.month-e1.month>=0 and e2.month-e1.month<3 and e1.id=e2.id
and e2.month!=e3.mm and e2.id=e3.id
group by e1.id, e1.month
order e1.id asc, e2.month desc


/*262 Trips and Users
description http://206.81.6.248:12306/leetcode/trips-and-users/description
*/
select request_at "Day",  
round((case when status!=‘completed’ then 1 else 0 end)/(count(*)),2) "Cancellation Rate"
from trips t
inner join users c on t.cliend_id=c.users_id
inner join users d on t.driver_id=c.users_id
where c.banned=’No’ and c.role=’client’
  and d.banned=’No’ and d.role=’driver’
  and request_at between ‘2013-10-01’ and ’2013-10-03’
group by request_at

/*1045 Customers Who Bought All Products
description http://206.81.6.248:12306/leetcode/customers-who-bought-all-products/description
*/
select customer_id
from customer 
where customer_id not in (select customer_id from customers c right join product p on c.customer_id=p.customer_id where c.customer_id is null)

/*569 Customers Median Employee Salary
description http://206.81.6.248:12306/leetcode/median-employee-salary/description
*/
select e.*
from employee e
where abs((select count(salary) from employee e1 where e1.salary<=e.salary and e1.company=e.company)
- (select count(salary) from employee e2 where e2.salary>=e.salary and e2.company=e.company))
<=(select count(salary) from employee e3 where e3.salary=e.salary and e3.company=e.company)

/*180 Consecutive Numbers
description http://206.81.6.248:12306/leetcode/consecutive-numbers/description
*/
select distinct l1.id consecutivenums
from logs l1, logs l2, logs l3
where l1.id+1=l2.id and l2.id+1=l3.id
and l1.nums=l2.nums and l2.nums=l3.nums

/*614 Second Degree Follower
description http://206.81.6.248:12306/leetcode/second-degree-follower/description
*/
select fr.follower, count(fe.followee) as num
from follow fe
left join follow fr on fr.follower=fe.followee
group by fr.follower

/*578 Get Highest Answer Rate Question
description http://206.81.6.248:12306/leetcode/get-highest-answer-rate-question/description
*/

select q_num
from (select q_num, sum(case when answer_id is null then 0 else 1 end)/sum(case when action='show' then 0 else 1 end) rate
from survey_log
group by q_num) s
where s.rate=(select max(rate) from s)

/*1225 Report Contiguous Dates
description http://206.81.6.248:12306/leetcode/report-contiguous-dates/description
*/
select result, date_temp, date_add(date_temp, interval min(rn)) start_date, date_add(date_temp, interval min(rn)+count(*)) end_date
from 
(select result, date, rn, date_add(date, interal - rn) date_temp
from (select result, date, row_num() over(partition by date) rn
(select "Failed" as result, date from failed
union all 
select "Successed" as result, date from successed) ) date_rank
) date_gap